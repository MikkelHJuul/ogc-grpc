
syntax = "proto2";

package org.ogcapi;

// options for java
//include for google stuff
// validation via envoyproxy_proto_validate-noget

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "ogc-inspire-api";
    version: "1.0";
    contact: {
      name: "someone";
      url: "https://ogc.org/something/something";
      email: "noone@example.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service OGCInspireService {

  rpc ItemStream(stream FeatureRequest) returns (stream Feature); //long-lived stream

  rpc ItemsAsCollection(stream FeatureRequest) returns (FeatureCollection);

  rpc Items(FeatureCollectionRequest) returns (stream Feature);

  rpc Item(FeatureRequest) returns (Feature);

  rpc OGCLandingPage(google.protobuf.empty) returns (OGCBaseResponse) {
    option (google.api.http) = { get: "/" };
  }

  rpc OGCConformance(google.protobuf.empty) returns (OGCConformanceResponse) {
    option (google.api.http) = { get: "conformance" };
  }

  rpc OGCCollections(google.protobuf.empty) returns (OGCCollectionsResponse) {
    option (google.api.http) = { get: "collections" };
  }

  rpc OGCCollection(CollectionRequest) returns (OGCCollection) {
    option (google.api.http) = { get: "collections/{collection}" };
  }

  rpc OGCItems(FeatureCollectionRequest) returns (FeatureCollection) {
      option (google.api.http) = { get: "collections/{collection}/items" };
  }

  rpc OGCItem(FeatureRequest) returns (OGCFeature) {
    option (google.api.http) = { get: "collections/{collection}/items/{id}" };
  }
}

enum COLLECTION {
  //... your collections
}

enum CRS {
  crs_84 = 1;
}

message CollectionRequest {
  required COLLECTION collection = 2;
}

message FeatureCollectionRequest {
  required COLLECTION collection = 1;

  optional string datetime = 10;  // datetime searching as specified in http://docs.opengeospatial.org/is/17-069r3/17-069r3.html#_parameter_datetime an dates as specified in RFC3339 https://tools.ietf.org/html/rfc3339
  repeated int32 bbox = 20;  // string or repeated int32 (reserves ordering?)
  optional CRS bbox_crs = 21;  // coordinate reference system

}

message FeatureCollection {
  required string type = 1; //FeatureCollection
  repeated Feature features = 2;
  required string timeStamp = 3; //RFC3339 (the google wkt requires proto3, which doesn't support ESP yet)
  required int32 numberReturned = 4;
  repeated Link links = 5;
}

message Feature {
  required string type = 1;
  required string id = 2;
  required google.protobuf.Any properties = 3;
  required Geometry geometry = 4;
}

message Geometry { //maybe restructure??
  required string type = 1;
  repeated float coordinates = 2;
}

message OGCFeature { //wrapper of single feature for OGC
  required string type = 1;
  required string id = 2;
  required google.protobuf.Any properties = 3;
  required Geometry geometry = 4;
  repeated Link links = 5;
}


message FeatureRequest {
  required COLLECTION collection = 1;
  required string id = 2;
}


message OGCBaseResponse {
  repeated Link links = 1;
}

message Link {
  required string href = 1;
  required string rel = 2;
  required string type = 3;
  required string title = 4;
}

message OGCConformanceResponse {
  repeated string conformsTo = 1;
}

message OGCCollectionsResponse {
  repeated Link links = 1;
  repeated OGCCollection collections = 2;
}

message OGCCollection {
  required string id = 1;
  required string title = 2;
  required string description = 3;
  repeated Link links = 4;
  required string name = 5;
}
